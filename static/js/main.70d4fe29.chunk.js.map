{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmint","preventDefault","props","submit","id","shortid","resetForm","this","className","s","container","onSubmit","form","type","pattern","title","required","onChange","button","Component","Filter","change","ContactList","contacts","onDeleteContact","list","map","item","text","onClick","App","dataBaseContacts","filter","deleteContact","contactId","prewState","contact","formSubmitHandler","contactic","some","toLowerCase","alert","changeFilter","getDisplayContacts","normalFilter","includes","dataContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","displayContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d4fe29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2kG4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__pw2I0\",\"title\":\"ContactList_title__3C1pc\",\"list\":\"ContactList_list__jIm_t\",\"item\":\"ContactList_item__40hkl\",\"text\":\"ContactList_text__7nkAH\",\"number\":\"ContactList_number__3OGmg\",\"button\":\"ContactList_button__39LlI\"};","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n    // this.setState({name: e.currentTarget.value})\n  };\n\n  handleSubmint = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.submit({ id: shortid(), name, number });\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={s.container}>\n        <form onSubmit={this.handleSubmint} className={s.form}>\n          <h3>Name</h3>\n          <label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <h3>Number</h3>\n          <label>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, change}) => {\r\n    return (\r\n        <div className={s.container}>\r\n        <h3>Finde contacts by name</h3>\r\n            <label>\r\n                <input type=\"text\" value={value} onChange={change} />\r\n            </label>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\n\r\nFilter.propTypes = {\r\n   value: PropTypes.string,\r\n   change: PropTypes.func.isRequired,\r\n   \r\n\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => \r\n    <div className={s.container}>\r\n        <ul className={s.list}>\r\n            {contacts.map(({id, name, number}) => (\r\n            <li key={id} className={s.item}>\r\n                <p className={s.text}>{name}:\r\n                    <span className={s.number}>{number}</span>\r\n                </p>\r\n                <button type=\"button\" className={s.button} onClick={() => onDeleteContact(id)}>delete</button> \r\n            </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n\r\n\r\nContactList.propTypes ={\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n      ),\r\n    onDeleteContact: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport dataBaseContacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: dataBaseContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const dataContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(dataContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prewState => ({\n      contacts: prewState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = contactic => {\n    // console.log(contact);\n\n    const check = this.state.contacts.some(\n      contact => contact.name.toLowerCase() === contactic.name.toLowerCase(),\n    );\n\n    check\n      ? alert(`${contactic.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contactic, ...contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getDisplayContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const displayContacts = this.getDisplayContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm submit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} change={this.changeFilter} />\n        <ContactList\n          contacts={displayContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3Nqtg\",\"form\":\"ContactForm_form__3ZZAr\",\"title\":\"ContactForm_title__25g0W\",\"list\":\"ContactForm_list__19Tz3\",\"item\":\"ContactForm_item__1jPfv\",\"text\":\"ContactForm_text__1uF2m\",\"number\":\"ContactForm_number__1sBsC\",\"button\":\"ContactForm_button__2GOHf\"};"],"sourceRoot":""}